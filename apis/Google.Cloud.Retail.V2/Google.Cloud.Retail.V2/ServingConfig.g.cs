// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/retail/v2/serving_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Retail.V2 {

  /// <summary>Holder for reflection information generated from google/cloud/retail/v2/serving_config.proto</summary>
  public static partial class ServingConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/retail/v2/serving_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServingConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Citnb29nbGUvY2xvdWQvcmV0YWlsL3YyL3NlcnZpbmdfY29uZmlnLnByb3Rv",
            "EhZnb29nbGUuY2xvdWQucmV0YWlsLnYyGh9nb29nbGUvYXBpL2ZpZWxkX2Jl",
            "aGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGiNnb29n",
            "bGUvY2xvdWQvcmV0YWlsL3YyL2NvbW1vbi5wcm90bxorZ29vZ2xlL2Nsb3Vk",
            "L3JldGFpbC92Mi9zZWFyY2hfc2VydmljZS5wcm90byLFBgoNU2VydmluZ0Nv",
            "bmZpZxIRCgRuYW1lGAEgASgJQgPgQQUSGQoMZGlzcGxheV9uYW1lGAIgASgJ",
            "QgPgQQISEAoIbW9kZWxfaWQYAyABKAkSHQoVcHJpY2VfcmVyYW5raW5nX2xl",
            "dmVsGAQgASgJEhkKEWZhY2V0X2NvbnRyb2xfaWRzGAUgAygJElIKEmR5bmFt",
            "aWNfZmFjZXRfc3BlYxgGIAEoCzI2Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIu",
            "U2VhcmNoUmVxdWVzdC5EeW5hbWljRmFjZXRTcGVjEhkKEWJvb3N0X2NvbnRy",
            "b2xfaWRzGAcgAygJEhoKEmZpbHRlcl9jb250cm9sX2lkcxgJIAMoCRIcChRy",
            "ZWRpcmVjdF9jb250cm9sX2lkcxgKIAMoCRIjCht0d293YXlfc3lub255bXNf",
            "Y29udHJvbF9pZHMYEiADKAkSIwobb25ld2F5X3N5bm9ueW1zX2NvbnRyb2xf",
            "aWRzGAwgAygJEiQKHGRvX25vdF9hc3NvY2lhdGVfY29udHJvbF9pZHMYDSAD",
            "KAkSHwoXcmVwbGFjZW1lbnRfY29udHJvbF9pZHMYDiADKAkSGgoSaWdub3Jl",
            "X2NvbnRyb2xfaWRzGA8gAygJEhcKD2RpdmVyc2l0eV9sZXZlbBgIIAEoCRIk",
            "ChxlbmFibGVfY2F0ZWdvcnlfZmlsdGVyX2xldmVsGBAgASgJElcKFHBlcnNv",
            "bmFsaXphdGlvbl9zcGVjGBUgASgLMjkuZ29vZ2xlLmNsb3VkLnJldGFpbC52",
            "Mi5TZWFyY2hSZXF1ZXN0LlBlcnNvbmFsaXphdGlvblNwZWMSRAoOc29sdXRp",
            "b25fdHlwZXMYEyADKA4yJC5nb29nbGUuY2xvdWQucmV0YWlsLnYyLlNvbHV0",
            "aW9uVHlwZUIG4EEC4EEFOoUB6kGBAQojcmV0YWlsLmdvb2dsZWFwaXMuY29t",
            "L1NlcnZpbmdDb25maWcSWnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMv",
            "e2xvY2F0aW9ufS9jYXRhbG9ncy97Y2F0YWxvZ30vc2VydmluZ0NvbmZpZ3Mv",
            "e3NlcnZpbmdfY29uZmlnfULHAQoaY29tLmdvb2dsZS5jbG91ZC5yZXRhaWwu",
            "djJCElNlcnZpbmdDb25maWdQcm90b1ABWjxnb29nbGUuZ29sYW5nLm9yZy9n",
            "ZW5wcm90by9nb29nbGVhcGlzL2Nsb3VkL3JldGFpbC92MjtyZXRhaWyiAgZS",
            "RVRBSUyqAhZHb29nbGUuQ2xvdWQuUmV0YWlsLlYyygIWR29vZ2xlXENsb3Vk",
            "XFJldGFpbFxWMuoCGUdvb2dsZTo6Q2xvdWQ6OlJldGFpbDo6VjJiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Retail.V2.CommonReflection.Descriptor, global::Google.Cloud.Retail.V2.SearchServiceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Retail.V2.ServingConfig), global::Google.Cloud.Retail.V2.ServingConfig.Parser, new[]{ "Name", "DisplayName", "ModelId", "PriceRerankingLevel", "FacetControlIds", "DynamicFacetSpec", "BoostControlIds", "FilterControlIds", "RedirectControlIds", "TwowaySynonymsControlIds", "OnewaySynonymsControlIds", "DoNotAssociateControlIds", "ReplacementControlIds", "IgnoreControlIds", "DiversityLevel", "EnableCategoryFilterLevel", "PersonalizationSpec", "SolutionTypes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Configures metadata that is used to generate serving time results (e.g.
  /// search results or recommendation predictions).
  /// </summary>
  public sealed partial class ServingConfig : pb::IMessage<ServingConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServingConfig> _parser = new pb::MessageParser<ServingConfig>(() => new ServingConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Retail.V2.ServingConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServingConfig(ServingConfig other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      modelId_ = other.modelId_;
      priceRerankingLevel_ = other.priceRerankingLevel_;
      facetControlIds_ = other.facetControlIds_.Clone();
      dynamicFacetSpec_ = other.dynamicFacetSpec_ != null ? other.dynamicFacetSpec_.Clone() : null;
      boostControlIds_ = other.boostControlIds_.Clone();
      filterControlIds_ = other.filterControlIds_.Clone();
      redirectControlIds_ = other.redirectControlIds_.Clone();
      twowaySynonymsControlIds_ = other.twowaySynonymsControlIds_.Clone();
      onewaySynonymsControlIds_ = other.onewaySynonymsControlIds_.Clone();
      doNotAssociateControlIds_ = other.doNotAssociateControlIds_.Clone();
      replacementControlIds_ = other.replacementControlIds_.Clone();
      ignoreControlIds_ = other.ignoreControlIds_.Clone();
      diversityLevel_ = other.diversityLevel_;
      enableCategoryFilterLevel_ = other.enableCategoryFilterLevel_;
      personalizationSpec_ = other.personalizationSpec_ != null ? other.personalizationSpec_.Clone() : null;
      solutionTypes_ = other.solutionTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServingConfig Clone() {
      return new ServingConfig(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Immutable. Fully qualified name
    /// `projects/*/locations/global/catalogs/*/servingConfig/*`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Required. The human readable serving config display name. Used in Retail
    /// UI.
    ///
    /// This field must be a UTF-8 encoded string with a length limit of 128
    /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 3;
    private string modelId_ = "";
    /// <summary>
    /// The id of the model in the same [Catalog][google.cloud.retail.v2.Catalog]
    /// to use at serving time. Currently only RecommendationModels are supported:
    /// https://cloud.google.com/retail/recommendations-ai/docs/create-models
    /// Can be changed but only to a compatible model (e.g.
    /// others-you-may-like CTR to others-you-may-like CVR).
    ///
    /// Required when
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price_reranking_level" field.</summary>
    public const int PriceRerankingLevelFieldNumber = 4;
    private string priceRerankingLevel_ = "";
    /// <summary>
    /// How much price ranking we want in serving results.
    /// Price reranking causes product items with a similar
    /// recommendation probability to be ordered by price, with the
    /// highest-priced items first. This setting could result in a decrease in
    /// click-through and conversion rates.
    ///  Allowed values are:
    ///
    /// * 'no-price-reranking'
    /// * 'low-price-raranking'
    /// * 'medium-price-reranking'
    /// * 'high-price-reranking'
    ///
    /// If not specified, we choose default based on model type. Default value:
    /// 'no-price-reranking'.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PriceRerankingLevel {
      get { return priceRerankingLevel_; }
      set {
        priceRerankingLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facet_control_ids" field.</summary>
    public const int FacetControlIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_facetControlIds_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> facetControlIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Facet specifications for faceted search. If empty, no facets are returned.
    /// The ids refer to the ids of [Control][google.cloud.retail.v2.Control]
    /// resources with only the Facet control set. These controls are assumed to be
    /// in the same [Catalog][google.cloud.retail.v2.Catalog] as the
    /// [ServingConfig][google.cloud.retail.v2.ServingConfig].
    /// A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error
    /// is returned.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> FacetControlIds {
      get { return facetControlIds_; }
    }

    /// <summary>Field number for the "dynamic_facet_spec" field.</summary>
    public const int DynamicFacetSpecFieldNumber = 6;
    private global::Google.Cloud.Retail.V2.SearchRequest.Types.DynamicFacetSpec dynamicFacetSpec_;
    /// <summary>
    /// The specification for dynamically generated facets. Notice that only
    /// textual facets can be dynamically generated.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Retail.V2.SearchRequest.Types.DynamicFacetSpec DynamicFacetSpec {
      get { return dynamicFacetSpec_; }
      set {
        dynamicFacetSpec_ = value;
      }
    }

    /// <summary>Field number for the "boost_control_ids" field.</summary>
    public const int BoostControlIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_boostControlIds_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> boostControlIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Condition boost specifications. If a product matches multiple conditions
    /// in the specifications, boost scores from these specifications are all
    /// applied and combined in a non-linear way. Maximum number of
    /// specifications is 100.
    ///
    /// Notice that if both
    /// [ServingConfig.boost_control_ids][google.cloud.retail.v2.ServingConfig.boost_control_ids]
    /// and
    /// [SearchRequest.boost_spec][google.cloud.retail.v2.SearchRequest.boost_spec]
    /// are set, the boost conditions from both places are evaluated. If a search
    /// request matches multiple boost conditions, the final boost score is equal
    /// to the sum of the boost scores from all matched boost conditions.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BoostControlIds {
      get { return boostControlIds_; }
    }

    /// <summary>Field number for the "filter_control_ids" field.</summary>
    public const int FilterControlIdsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_filterControlIds_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> filterControlIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Condition filter specifications. If a product matches multiple conditions
    /// in the specifications, filters from these specifications are all
    /// applied and combined via the AND operator. Maximum number of
    /// specifications is 100.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> FilterControlIds {
      get { return filterControlIds_; }
    }

    /// <summary>Field number for the "redirect_control_ids" field.</summary>
    public const int RedirectControlIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_redirectControlIds_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> redirectControlIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Condition redirect specifications. Only the first triggered redirect action
    /// is applied, even if multiple apply. Maximum number of specifications is
    /// 1000.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> RedirectControlIds {
      get { return redirectControlIds_; }
    }

    /// <summary>Field number for the "twoway_synonyms_control_ids" field.</summary>
    public const int TwowaySynonymsControlIdsFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _repeated_twowaySynonymsControlIds_codec
        = pb::FieldCodec.ForString(146);
    private readonly pbc::RepeatedField<string> twowaySynonymsControlIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Condition synonyms specifications. If multiple syonyms conditions match,
    /// all matching synonyms control in the list will execute. Order of controls
    /// in the list will not matter. Maximum number of specifications is
    /// 100.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> TwowaySynonymsControlIds {
      get { return twowaySynonymsControlIds_; }
    }

    /// <summary>Field number for the "oneway_synonyms_control_ids" field.</summary>
    public const int OnewaySynonymsControlIdsFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _repeated_onewaySynonymsControlIds_codec
        = pb::FieldCodec.ForString(98);
    private readonly pbc::RepeatedField<string> onewaySynonymsControlIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Condition oneway synonyms specifications. If multiple oneway synonyms
    /// conditions match, all matching oneway synonyms controls in the list will
    /// execute. Order of controls in the list will not matter. Maximum number of
    /// specifications is 100.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> OnewaySynonymsControlIds {
      get { return onewaySynonymsControlIds_; }
    }

    /// <summary>Field number for the "do_not_associate_control_ids" field.</summary>
    public const int DoNotAssociateControlIdsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_doNotAssociateControlIds_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> doNotAssociateControlIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Condition do not associate specifications. If multiple do not associate
    /// conditions match, all matching do not associate controls in the list will
    /// execute.
    /// - Order does not matter.
    /// - Maximum number of specifications is 100.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> DoNotAssociateControlIds {
      get { return doNotAssociateControlIds_; }
    }

    /// <summary>Field number for the "replacement_control_ids" field.</summary>
    public const int ReplacementControlIdsFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_replacementControlIds_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> replacementControlIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Condition replacement specifications.
    /// - Applied according to the order in the list.
    /// - A previously replaced term can not be re-replaced.
    /// - Maximum number of specifications is 100.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ReplacementControlIds {
      get { return replacementControlIds_; }
    }

    /// <summary>Field number for the "ignore_control_ids" field.</summary>
    public const int IgnoreControlIdsFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_ignoreControlIds_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> ignoreControlIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Condition ignore specifications. If multiple ignore
    /// conditions match, all matching ignore controls in the list will
    /// execute.
    /// - Order does not matter.
    /// - Maximum number of specifications is 100.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> IgnoreControlIds {
      get { return ignoreControlIds_; }
    }

    /// <summary>Field number for the "diversity_level" field.</summary>
    public const int DiversityLevelFieldNumber = 8;
    private string diversityLevel_ = "";
    /// <summary>
    /// How much diversity to use in recommendation model results e.g.
    /// 'medium-diversity' or 'high-diversity'. Currently supported values:
    ///
    /// * 'no-diversity'
    /// * 'low-diversity'
    /// * 'medium-diversity'
    /// * 'high-diversity'
    /// * 'auto-diversity'
    ///
    /// If not specified, we choose default based on recommendation model
    /// type. Default value: 'no-diversity'.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DiversityLevel {
      get { return diversityLevel_; }
      set {
        diversityLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enable_category_filter_level" field.</summary>
    public const int EnableCategoryFilterLevelFieldNumber = 16;
    private string enableCategoryFilterLevel_ = "";
    /// <summary>
    /// Whether to add additional category filters on the 'similar-items' model.
    /// If not specified, we enable it by default.
    ///  Allowed values are:
    ///
    /// * 'no-category-match': No additional filtering of original results from
    ///   the model and the customer's filters.
    /// * 'relaxed-category-match': Only keep results with categories that match
    ///   at least one item categories in the PredictRequests's context item.
    ///   * If customer also sends filters in the PredictRequest, then the results
    ///   will satisfy both conditions (user given and category match).
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EnableCategoryFilterLevel {
      get { return enableCategoryFilterLevel_; }
      set {
        enableCategoryFilterLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "personalization_spec" field.</summary>
    public const int PersonalizationSpecFieldNumber = 21;
    private global::Google.Cloud.Retail.V2.SearchRequest.Types.PersonalizationSpec personalizationSpec_;
    /// <summary>
    /// The specification for personalization spec.
    ///
    /// Can only be set if
    /// [solution_types][google.cloud.retail.v2.ServingConfig.solution_types] is
    /// [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2main.SolutionType.SOLUTION_TYPE_SEARCH].
    ///
    /// Notice that if both
    /// [ServingConfig.personalization_spec][google.cloud.retail.v2.ServingConfig.personalization_spec]
    /// and
    /// [SearchRequest.personalization_spec][google.cloud.retail.v2.SearchRequest.personalization_spec]
    /// are set.
    /// [SearchRequest.personalization_spec][google.cloud.retail.v2.SearchRequest.personalization_spec]
    /// will override
    /// [ServingConfig.personalization_spec][google.cloud.retail.v2.ServingConfig.personalization_spec].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Retail.V2.SearchRequest.Types.PersonalizationSpec PersonalizationSpec {
      get { return personalizationSpec_; }
      set {
        personalizationSpec_ = value;
      }
    }

    /// <summary>Field number for the "solution_types" field.</summary>
    public const int SolutionTypesFieldNumber = 19;
    private static readonly pb::FieldCodec<global::Google.Cloud.Retail.V2.SolutionType> _repeated_solutionTypes_codec
        = pb::FieldCodec.ForEnum(154, x => (int) x, x => (global::Google.Cloud.Retail.V2.SolutionType) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Retail.V2.SolutionType> solutionTypes_ = new pbc::RepeatedField<global::Google.Cloud.Retail.V2.SolutionType>();
    /// <summary>
    /// Required. Immutable. Specifies the solution types that a serving config can
    /// be associated with. Currently we support setting only one type of solution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Retail.V2.SolutionType> SolutionTypes {
      get { return solutionTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (ModelId != other.ModelId) return false;
      if (PriceRerankingLevel != other.PriceRerankingLevel) return false;
      if(!facetControlIds_.Equals(other.facetControlIds_)) return false;
      if (!object.Equals(DynamicFacetSpec, other.DynamicFacetSpec)) return false;
      if(!boostControlIds_.Equals(other.boostControlIds_)) return false;
      if(!filterControlIds_.Equals(other.filterControlIds_)) return false;
      if(!redirectControlIds_.Equals(other.redirectControlIds_)) return false;
      if(!twowaySynonymsControlIds_.Equals(other.twowaySynonymsControlIds_)) return false;
      if(!onewaySynonymsControlIds_.Equals(other.onewaySynonymsControlIds_)) return false;
      if(!doNotAssociateControlIds_.Equals(other.doNotAssociateControlIds_)) return false;
      if(!replacementControlIds_.Equals(other.replacementControlIds_)) return false;
      if(!ignoreControlIds_.Equals(other.ignoreControlIds_)) return false;
      if (DiversityLevel != other.DiversityLevel) return false;
      if (EnableCategoryFilterLevel != other.EnableCategoryFilterLevel) return false;
      if (!object.Equals(PersonalizationSpec, other.PersonalizationSpec)) return false;
      if(!solutionTypes_.Equals(other.solutionTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (PriceRerankingLevel.Length != 0) hash ^= PriceRerankingLevel.GetHashCode();
      hash ^= facetControlIds_.GetHashCode();
      if (dynamicFacetSpec_ != null) hash ^= DynamicFacetSpec.GetHashCode();
      hash ^= boostControlIds_.GetHashCode();
      hash ^= filterControlIds_.GetHashCode();
      hash ^= redirectControlIds_.GetHashCode();
      hash ^= twowaySynonymsControlIds_.GetHashCode();
      hash ^= onewaySynonymsControlIds_.GetHashCode();
      hash ^= doNotAssociateControlIds_.GetHashCode();
      hash ^= replacementControlIds_.GetHashCode();
      hash ^= ignoreControlIds_.GetHashCode();
      if (DiversityLevel.Length != 0) hash ^= DiversityLevel.GetHashCode();
      if (EnableCategoryFilterLevel.Length != 0) hash ^= EnableCategoryFilterLevel.GetHashCode();
      if (personalizationSpec_ != null) hash ^= PersonalizationSpec.GetHashCode();
      hash ^= solutionTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelId);
      }
      if (PriceRerankingLevel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceRerankingLevel);
      }
      facetControlIds_.WriteTo(output, _repeated_facetControlIds_codec);
      if (dynamicFacetSpec_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DynamicFacetSpec);
      }
      boostControlIds_.WriteTo(output, _repeated_boostControlIds_codec);
      if (DiversityLevel.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DiversityLevel);
      }
      filterControlIds_.WriteTo(output, _repeated_filterControlIds_codec);
      redirectControlIds_.WriteTo(output, _repeated_redirectControlIds_codec);
      onewaySynonymsControlIds_.WriteTo(output, _repeated_onewaySynonymsControlIds_codec);
      doNotAssociateControlIds_.WriteTo(output, _repeated_doNotAssociateControlIds_codec);
      replacementControlIds_.WriteTo(output, _repeated_replacementControlIds_codec);
      ignoreControlIds_.WriteTo(output, _repeated_ignoreControlIds_codec);
      if (EnableCategoryFilterLevel.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(EnableCategoryFilterLevel);
      }
      twowaySynonymsControlIds_.WriteTo(output, _repeated_twowaySynonymsControlIds_codec);
      solutionTypes_.WriteTo(output, _repeated_solutionTypes_codec);
      if (personalizationSpec_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(PersonalizationSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelId);
      }
      if (PriceRerankingLevel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceRerankingLevel);
      }
      facetControlIds_.WriteTo(ref output, _repeated_facetControlIds_codec);
      if (dynamicFacetSpec_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DynamicFacetSpec);
      }
      boostControlIds_.WriteTo(ref output, _repeated_boostControlIds_codec);
      if (DiversityLevel.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DiversityLevel);
      }
      filterControlIds_.WriteTo(ref output, _repeated_filterControlIds_codec);
      redirectControlIds_.WriteTo(ref output, _repeated_redirectControlIds_codec);
      onewaySynonymsControlIds_.WriteTo(ref output, _repeated_onewaySynonymsControlIds_codec);
      doNotAssociateControlIds_.WriteTo(ref output, _repeated_doNotAssociateControlIds_codec);
      replacementControlIds_.WriteTo(ref output, _repeated_replacementControlIds_codec);
      ignoreControlIds_.WriteTo(ref output, _repeated_ignoreControlIds_codec);
      if (EnableCategoryFilterLevel.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(EnableCategoryFilterLevel);
      }
      twowaySynonymsControlIds_.WriteTo(ref output, _repeated_twowaySynonymsControlIds_codec);
      solutionTypes_.WriteTo(ref output, _repeated_solutionTypes_codec);
      if (personalizationSpec_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(PersonalizationSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (PriceRerankingLevel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceRerankingLevel);
      }
      size += facetControlIds_.CalculateSize(_repeated_facetControlIds_codec);
      if (dynamicFacetSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DynamicFacetSpec);
      }
      size += boostControlIds_.CalculateSize(_repeated_boostControlIds_codec);
      size += filterControlIds_.CalculateSize(_repeated_filterControlIds_codec);
      size += redirectControlIds_.CalculateSize(_repeated_redirectControlIds_codec);
      size += twowaySynonymsControlIds_.CalculateSize(_repeated_twowaySynonymsControlIds_codec);
      size += onewaySynonymsControlIds_.CalculateSize(_repeated_onewaySynonymsControlIds_codec);
      size += doNotAssociateControlIds_.CalculateSize(_repeated_doNotAssociateControlIds_codec);
      size += replacementControlIds_.CalculateSize(_repeated_replacementControlIds_codec);
      size += ignoreControlIds_.CalculateSize(_repeated_ignoreControlIds_codec);
      if (DiversityLevel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiversityLevel);
      }
      if (EnableCategoryFilterLevel.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EnableCategoryFilterLevel);
      }
      if (personalizationSpec_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PersonalizationSpec);
      }
      size += solutionTypes_.CalculateSize(_repeated_solutionTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServingConfig other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.PriceRerankingLevel.Length != 0) {
        PriceRerankingLevel = other.PriceRerankingLevel;
      }
      facetControlIds_.Add(other.facetControlIds_);
      if (other.dynamicFacetSpec_ != null) {
        if (dynamicFacetSpec_ == null) {
          DynamicFacetSpec = new global::Google.Cloud.Retail.V2.SearchRequest.Types.DynamicFacetSpec();
        }
        DynamicFacetSpec.MergeFrom(other.DynamicFacetSpec);
      }
      boostControlIds_.Add(other.boostControlIds_);
      filterControlIds_.Add(other.filterControlIds_);
      redirectControlIds_.Add(other.redirectControlIds_);
      twowaySynonymsControlIds_.Add(other.twowaySynonymsControlIds_);
      onewaySynonymsControlIds_.Add(other.onewaySynonymsControlIds_);
      doNotAssociateControlIds_.Add(other.doNotAssociateControlIds_);
      replacementControlIds_.Add(other.replacementControlIds_);
      ignoreControlIds_.Add(other.ignoreControlIds_);
      if (other.DiversityLevel.Length != 0) {
        DiversityLevel = other.DiversityLevel;
      }
      if (other.EnableCategoryFilterLevel.Length != 0) {
        EnableCategoryFilterLevel = other.EnableCategoryFilterLevel;
      }
      if (other.personalizationSpec_ != null) {
        if (personalizationSpec_ == null) {
          PersonalizationSpec = new global::Google.Cloud.Retail.V2.SearchRequest.Types.PersonalizationSpec();
        }
        PersonalizationSpec.MergeFrom(other.PersonalizationSpec);
      }
      solutionTypes_.Add(other.solutionTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            ModelId = input.ReadString();
            break;
          }
          case 34: {
            PriceRerankingLevel = input.ReadString();
            break;
          }
          case 42: {
            facetControlIds_.AddEntriesFrom(input, _repeated_facetControlIds_codec);
            break;
          }
          case 50: {
            if (dynamicFacetSpec_ == null) {
              DynamicFacetSpec = new global::Google.Cloud.Retail.V2.SearchRequest.Types.DynamicFacetSpec();
            }
            input.ReadMessage(DynamicFacetSpec);
            break;
          }
          case 58: {
            boostControlIds_.AddEntriesFrom(input, _repeated_boostControlIds_codec);
            break;
          }
          case 66: {
            DiversityLevel = input.ReadString();
            break;
          }
          case 74: {
            filterControlIds_.AddEntriesFrom(input, _repeated_filterControlIds_codec);
            break;
          }
          case 82: {
            redirectControlIds_.AddEntriesFrom(input, _repeated_redirectControlIds_codec);
            break;
          }
          case 98: {
            onewaySynonymsControlIds_.AddEntriesFrom(input, _repeated_onewaySynonymsControlIds_codec);
            break;
          }
          case 106: {
            doNotAssociateControlIds_.AddEntriesFrom(input, _repeated_doNotAssociateControlIds_codec);
            break;
          }
          case 114: {
            replacementControlIds_.AddEntriesFrom(input, _repeated_replacementControlIds_codec);
            break;
          }
          case 122: {
            ignoreControlIds_.AddEntriesFrom(input, _repeated_ignoreControlIds_codec);
            break;
          }
          case 130: {
            EnableCategoryFilterLevel = input.ReadString();
            break;
          }
          case 146: {
            twowaySynonymsControlIds_.AddEntriesFrom(input, _repeated_twowaySynonymsControlIds_codec);
            break;
          }
          case 154:
          case 152: {
            solutionTypes_.AddEntriesFrom(input, _repeated_solutionTypes_codec);
            break;
          }
          case 170: {
            if (personalizationSpec_ == null) {
              PersonalizationSpec = new global::Google.Cloud.Retail.V2.SearchRequest.Types.PersonalizationSpec();
            }
            input.ReadMessage(PersonalizationSpec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            ModelId = input.ReadString();
            break;
          }
          case 34: {
            PriceRerankingLevel = input.ReadString();
            break;
          }
          case 42: {
            facetControlIds_.AddEntriesFrom(ref input, _repeated_facetControlIds_codec);
            break;
          }
          case 50: {
            if (dynamicFacetSpec_ == null) {
              DynamicFacetSpec = new global::Google.Cloud.Retail.V2.SearchRequest.Types.DynamicFacetSpec();
            }
            input.ReadMessage(DynamicFacetSpec);
            break;
          }
          case 58: {
            boostControlIds_.AddEntriesFrom(ref input, _repeated_boostControlIds_codec);
            break;
          }
          case 66: {
            DiversityLevel = input.ReadString();
            break;
          }
          case 74: {
            filterControlIds_.AddEntriesFrom(ref input, _repeated_filterControlIds_codec);
            break;
          }
          case 82: {
            redirectControlIds_.AddEntriesFrom(ref input, _repeated_redirectControlIds_codec);
            break;
          }
          case 98: {
            onewaySynonymsControlIds_.AddEntriesFrom(ref input, _repeated_onewaySynonymsControlIds_codec);
            break;
          }
          case 106: {
            doNotAssociateControlIds_.AddEntriesFrom(ref input, _repeated_doNotAssociateControlIds_codec);
            break;
          }
          case 114: {
            replacementControlIds_.AddEntriesFrom(ref input, _repeated_replacementControlIds_codec);
            break;
          }
          case 122: {
            ignoreControlIds_.AddEntriesFrom(ref input, _repeated_ignoreControlIds_codec);
            break;
          }
          case 130: {
            EnableCategoryFilterLevel = input.ReadString();
            break;
          }
          case 146: {
            twowaySynonymsControlIds_.AddEntriesFrom(ref input, _repeated_twowaySynonymsControlIds_codec);
            break;
          }
          case 154:
          case 152: {
            solutionTypes_.AddEntriesFrom(ref input, _repeated_solutionTypes_codec);
            break;
          }
          case 170: {
            if (personalizationSpec_ == null) {
              PersonalizationSpec = new global::Google.Cloud.Retail.V2.SearchRequest.Types.PersonalizationSpec();
            }
            input.ReadMessage(PersonalizationSpec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
